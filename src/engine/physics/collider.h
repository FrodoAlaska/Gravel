#pragma once

#include "physics/collision_data.h"

#include <glm/glm.hpp>

#include <string>

// DEFS
/////////////////////////////////////////////////////////////////////////////////
#define POINTS_MAX 8
/////////////////////////////////////////////////////////////////////////////////

struct PhysicsBody;

// Collider
/////////////////////////////////////////////////////////////////////////////////
struct Collider {
  glm::vec3 scale;
  glm::vec3 min, max;
  glm::vec3 points[POINTS_MAX];

  std::string id;
  bool is_grounded;

  PhysicsBody* body;
};
/////////////////////////////////////////////////////////////////////////////////

// Public functions
/////////////////////////////////////////////////////////////////////////////////
const bool collider_is_colliding(const Collider* coll1, const Collider* coll2, CollisionData* data);
void collider_update_points(Collider* collider, const glm::vec3& pos);
/////////////////////////////////////////////////////////////////////////////////
