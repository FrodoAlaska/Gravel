#pragma once 

#include "defines.h"
#include "resources/texture.h"

#include <string>

// Glyph
/////////////////////////////////////////////////////////////////////////////////
struct Glyph {
  i8 unicode;
  Texture* texture;

  i32 width, height;
  i32 x_offset, y_offset;
  
  i32 advance_x, kern, left_side_bearing;

  struct Bounds {
    i32 left, right, top, bottom;
  };
  Bounds bounds;
};
/////////////////////////////////////////////////////////////////////////////////

// Font
/////////////////////////////////////////////////////////////////////////////////
struct Font {
  u32 vao, vbo;
  f32 ascent, descent, line_gap;
  
  Glyph* glyphs;
  u32 glyphs_count;
  u32 loaded_glyphs = 0;
};
/////////////////////////////////////////////////////////////////////////////////

// Public functions
/////////////////////////////////////////////////////////////////////////////////
Font* font_load(const std::string& path, const f32 size);
void font_unload(Font* font);
i32 font_get_glyph_index(const Font* font, i8 codepoint);
/////////////////////////////////////////////////////////////////////////////////
